AWSTemplateFormatVersion: "2010-09-09"
Description: "Auto Scaling Group with On-Demand base instance and Spot scaling"

Parameters:
  VpcId:
    Type: String
    Description: "VPC ID"
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: "List of Subnet IDs"
  InstanceType:
    Type: String
    Default: "t3.micro"
    Description: "EC2 Instance Type"
  SpotInstanceType:
    Type: String
    Default: "t3.micro"
    Description: "EC2 Spot Instance Type"
  AMIId:
    Type: String
    Description: "AMI ID for instances"

Resources:
  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: EC2InstancePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "cloudwatch:*"
                Resource: "*"

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref InstanceRole

  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: "AutoScalingTemplate"
      VersionDescription: "v1"
      LaunchTemplateData:
        ImageId: !Ref AMIId
        InstanceType: !Ref InstanceType
        IamInstanceProfile:
          Name: !Ref InstanceProfile
        SecurityGroupIds:
          - !Ref InstanceSecurityGroup

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier: !Ref SubnetIds
      MinSize: 1
      MaxSize: 10
      DesiredCapacity: 1
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandBaseCapacity: 1
          OnDemandPercentageAboveBaseCapacity: 0
          SpotAllocationStrategy: "capacity-optimized"
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
            - InstanceType: !Ref SpotInstanceType

      TargetGroupARNs: []
      MetricsCollection:
        - Granularity: "1Minute"
      HealthCheckType: EC2
      HealthCheckGracePeriod: 300

  CPUScalingPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref AutoScalingGroup
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: 50.0
        ScaleInCooldown: 60
        ScaleOutCooldown: 60

  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: "AutoScalingALB"
      Subnets: !Ref SubnetIds
      SecurityGroups:
        - !Ref InstanceSecurityGroup
      Scheme: internet-facing
      Type: application
      IpAddressType: ipv4

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !Ref VpcId
      Protocol: HTTP
      Port: 80
      TargetType: instance
      HealthCheckProtocol: HTTP
      HealthCheckPort: traffic-port
      HealthCheckPath: "/"
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ALB
      Protocol: HTTP
      Port: 80
      DefaultActions:
        - Type: "forward"
          TargetGroupArn: !Ref TargetGroup

  RequestCountScalingPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref AutoScalingGroup
      PolicyType: StepScaling
      AdjustmentType: PercentChangeInCapacity
      MetricAggregationType: Average
      StepAdjustments:
        - MetricIntervalLowerBound: 0
          MetricIntervalUpperBound: 500
          ScalingAdjustment: 50
        - MetricIntervalLowerBound: 500
          MetricIntervalUpperBound: 1000
          ScalingAdjustment: 50
        - MetricIntervalLowerBound: 1000
          ScalingAdjustment: 50

  RequestCountAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: "Scale out based on request count"
      Namespace: AWS/ApplicationELB
      MetricName: RequestCount
      Dimensions:
        - Name: LoadBalancer
          Value: !Ref ALB
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      Threshold: 500
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Ref RequestCountScalingPolicy

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow HTTP and SSH"
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: "0.0.0.0/0"
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: "0.0.0.0/0"
